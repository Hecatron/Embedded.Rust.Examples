[tasks.flashid]
description = "Get the flashid / details from the esp32"
command = "python"
args = ["-m", "esptool", "--chip", "esp32", "-p", "${ESP32_FLASH_SERIAL}", "flash_id", "${@}"]
category = "ESP32"

[tasks.eraseflash]
description = "Erase the flash on the ESP32"
command = "python"
args = ["-m", "esptool", "--chip", "esp32", "-p", "${ESP32_FLASH_SERIAL}", "erase_flash", "${@}"]
category = "ESP32"

[tasks.imageinfo]
description = "Show the image info"
command = "python"
args = ["-m", "esptool", "--chip", "esp32", "elf2image", "${BUILD_BIN_FILE}", "${@}"]
category = "ESP32"

[tasks.elf2image]
description = "Generate a flashable binary from the elf file"
command = "python"
args = ["-m", "esptool", "--chip", "esp32", "elf2image", "${BUILD_ELF_FILE}", "${@}"]
dependencies = ["build"]
category = "ESP32"

# Todo move some of these to seperate env vars and test
# such as bootloader / partition table
# also add depends on elf2image
[tasks.flash]
description = "Upload / Flash the source to the esp32"
command = "python"
args = ["-m", "esptool", "--chip", "esp32", "-p", "${ESP32_FLASH_SERIAL}", "--baud", "${ESP32_FLASH_SERIAL_BAUD}",
"--before", "default_reset", "--after", "hard_reset", "write_flash",
"--flash_mode", "dio", "--flash_freq", "40m", "--flash_size", "detect",
"0x1000", "../bootloader/esp32-bootloader.bin",
"0x8000", "../bootloader/partitions.bin",
"0x10000", "${BUILD_BIN_FILE}",
"${@}"]
dependencies = ["elf2image"]
category = "ESP32"




